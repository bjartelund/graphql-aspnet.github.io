"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5101],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),s=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,p=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=s(r),h=a,m=u["".concat(p,".").concat(h)]||u[h]||d[h]||l;return r?n.createElement(m,i(i({ref:t},c),{},{components:r})):n.createElement(m,i({ref:t},c))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,i=new Array(l);i[0]=h;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[u]="string"==typeof e?e:a,i[1]=o;for(var s=2;s<l;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}h.displayName="MDXCreateElement"},7224:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var n=r(7462),a=(r(7294),r(3905));const l={id:"graph-controller",title:"Graph Controller",sidebar_label:"GraphController",sidebar_position:4},i=void 0,o={unversionedId:"reference/graph-controller",id:"reference/graph-controller",title:"Graph Controller",description:"The GraphController, from which all your controllers inherit, has some useful properties you can take advantage of.",source:"@site/docs/reference/graph-controller.md",sourceDirName:"reference",slug:"/reference/graph-controller",permalink:"/docs/reference/graph-controller",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{id:"graph-controller",title:"Graph Controller",sidebar_label:"GraphController",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Attributes",permalink:"/docs/reference/attributes"},next:{title:"GraphDirective",permalink:"/docs/reference/graph-directive"}},p={},s=[{value:"ModelState",id:"modelstate",level:2},{value:"Request",id:"request",level:2},{value:"User",id:"user",level:2}],c={toc:s};function u(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"GraphController"),", from which all your controllers inherit, has some useful properties you can take advantage of."),(0,a.kt)("h2",{id:"modelstate"},"ModelState"),(0,a.kt)("p",null,"The completed model state dictionary contains an entry for each validated parameter."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"public class CharacterController : GraphController\n{\n    [Query]\n    public IGraphActionResult Hero(Episode episode = Episode.EMPIRE)\n    {\n        if(!this.ModelState.IsValid)\n            return this.BadRequest(this.ModelState);\n\n        //...\n    }\n}\n")),(0,a.kt)("h2",{id:"request"},"Request"),(0,a.kt)("p",null,"The field request that initiated the action method call"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"public class CharacterController : GraphController\n{\n    [Query]\n    public IGraphActionResult Hero(Episode episode = Episode.EMPIRE)\n    {\n        if(this.Request.Field.IsLeaf)\n        {\n            // ...\n        }\n    }\n}\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"Request.Field"),": Useful metadata related to the field being resolved."),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},".TypeExpression"),": The type expression describing the return value of this field"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},".IsLeaf"),": Indicates whether this field returns a leaf value (enum or scalar) or an object."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},".Mode"),': Indicates the processing mode of this field (Batch or "per item")'),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},".FieldSource"),": Indicates what member type generated this field; property, method, action etc."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},".DataSource"),": The source data item being supplied to the field to be resolved."))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"Request.Items"),": A collection of key/value pairs accessible to all fields and directives in this individual request pipeline."))),(0,a.kt)("h2",{id:"user"},"User"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"ClaimsPrincipal")," created by ASP.NET when this request was authorized."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},'public class CharacterController : GraphController\n{\n    [Query]\n    public IGraphActionResult Hero(Episode episode = Episode.EMPIRE)\n    {\n        if(this.User.Identity.Name == "DebbieEast")\n        {\n            // ...\n        }\n    }\n}\n')))}u.isMDXComponent=!0}}]);