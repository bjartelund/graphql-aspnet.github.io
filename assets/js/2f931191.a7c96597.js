"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5101],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=c(r),h=a,m=d["".concat(s,".").concat(h)]||d[h]||u[h]||o;return r?n.createElement(m,l(l({ref:t},p),{},{components:r})):n.createElement(m,l({ref:t},p))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=h;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[d]="string"==typeof e?e:a,l[1]=i;for(var c=2;c<o;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}h.displayName="MDXCreateElement"},7224:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var n=r(7462),a=(r(7294),r(3905));const o={id:"graph-controller",title:"Graph Controller",sidebar_label:"GraphController",sidebar_position:4},l=void 0,i={unversionedId:"reference/graph-controller",id:"reference/graph-controller",title:"Graph Controller",description:"\u2705 See the section on Controllers & Actions for a detailed explination on how action methods work and how to declare them.",source:"@site/docs/reference/graph-controller.md",sourceDirName:"reference",slug:"/reference/graph-controller",permalink:"/docs/reference/graph-controller",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{id:"graph-controller",title:"Graph Controller",sidebar_label:"GraphController",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Attributes",permalink:"/docs/reference/attributes"},next:{title:"GraphDirective",permalink:"/docs/reference/graph-directive"}},s={},c=[{value:"ModelState",id:"modelstate",level:2},{value:"Request",id:"request",level:2},{value:"Notable Items on the Request",id:"notable-items-on-the-request",level:3},{value:"User",id:"user",level:2},{value:"Schema",id:"schema",level:2}],p={toc:c};function d(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"\u2705 See the section on ",(0,a.kt)("a",{parentName:"p",href:"/docs/controllers/actions"},"Controllers & Actions")," for a detailed explination on how action methods work and how to declare them."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"GraphController"),", from which all of your controllers inherit, is a core object used throughout graphql. This page details some lesser known and lesser used object referenced made available to each controller."),(0,a.kt)("h2",{id:"modelstate"},"ModelState"),(0,a.kt)("p",null,"The completed model state dictionary contains an entry for each validated parameter."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"public class CharacterController : GraphController\n{\n    [Query]\n    public IGraphActionResult CreateCharacter(Character characterModel)\n    {\n        // highlight-next-line\n        if(!this.ModelState.IsValid)\n            return this.BadRequest(this.ModelState);\n\n        //...\n    }\n}\n")),(0,a.kt)("h2",{id:"request"},"Request"),(0,a.kt)("p",null,"The field request generated via the execution pipeline. It contains all the necessary information used by graphql to resolve the current field."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"public class CharacterController : GraphController\n{\n    [Query]\n    public IGraphActionResult Hero(Episode episode = Episode.EMPIRE)\n    {\n        // highlight-next-line\n        if(this.Request.Field.IsLeaf)\n        {\n            // ...\n        }\n    }\n}\n")),(0,a.kt)("h3",{id:"notable-items-on-the-request"},"Notable Items on the Request"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"Request.Field"),": A reference to the graph field definition, on the target schema, for the field currently being resolved."),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},".TypeExpression"),": The type expression describing the return value of this field"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},".IsLeaf"),": Indicates whether this field returns a leaf value (enum or scalar) or an object."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},".Mode"),': Indicates the processing mode of this field (Batch or "per item")'),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},".FieldSource"),": Indicates what member type generated the field; property, method, action etc."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},".DataSource"),": The source data item being supplied to the field to be resolved."))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"Request.Items"),": A collection of key/value pairs accessible to all fields and directives in this individual request pipeline."))),(0,a.kt)("h2",{id:"user"},"User"),(0,a.kt)("p",null,"The User property contains the ",(0,a.kt)("inlineCode",{parentName:"p"},"ClaimsPrincipal")," created by ASP.NET when this request was authorized. "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},'public class CharacterController : GraphController\n{\n    [Query]\n    public IGraphActionResult Hero(Episode episode = Episode.EMPIRE)\n    {\n        // highlight-next-line\n        if(this.User.Identity.Name == "DebbieEast")\n        {\n            // ...\n        }\n    }\n}\n')),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"See the section on ",(0,a.kt)("a",{parentName:"p",href:"/docs/controllers/authorization"},"authorization")," for more details on how users are authenticated and authorized to action methods.")),(0,a.kt)("h2",{id:"schema"},"Schema"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"Schema")," property contains a reference to the singleton instance of the schema the current controller is resolving a field for. This object is considered read-only and should not be modified."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"public class CharacterController : GraphController\n{\n    [Query]\n    public IGraphActionResult Hero(Episode episode = Episode.EMPIRE)\n    {\n        // highlight-next-line\n        IObjectGraphType droidType = this.Schema.KnownTypes.FindGraphType(typeof(Droid), TypeKind.OBJECT);\n        // ...\n    }\n}\n")))}d.isMDXComponent=!0}}]);